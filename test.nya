platform {
	[simulator] {
		fn [stdio] write_num(value: i32): () {
			unsafe [stdio] {
				intrinsic:write_num(value);
			}
			return ();
		}
	}
}

fn fib(idx: i32): i32 {
	if idx == 0 { return 1; }
	if idx == 1 { return 1; }

	return fib(idx - 1) + fib(idx - 2);
}

fn fib_iter(idx: i32): i32 {
	let mut (a, b) = (1, 1);
	let mut i = 0;
	while (i != idx) {
		(a, b) = (b, a + b);
		i = i + 1;
	}
	return a;
}

fn [stdio] main(): i32 {
	fn nested(): i32 {
		return 30;
	}
	let mut a = 0;
	while (a != nested()) {
		write_num(fib_iter(a));
		a = a + 1;
	}
	return 0;
}
