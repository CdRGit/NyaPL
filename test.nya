platform {
	[simulator] {
		fn [stdio] write_num(value: i32): () {
			unsafe [stdio] {
				return intrinsic:write_num(value);
			}
		}
	}
}

fn fib(idx: i32): i32 {
	if idx == 0 { return 0; }
	elif idx == 1 { return 1; }

	return fib(idx-1) + fib(idx-2);
}

fn fib_iter(idx: i32): i32 {
	let mut count = 0;
	let mut (a, b) = (0, 1);
	if idx == 0 { return 0; }
	if idx == 1 { return 1; }
	while count != idx - 2 {
		(a, b) = (b, a + b);
		count = count + 1;
	}
	return b;
}

fn [stdio] main(): i32 {
	let mut a = 0;
	while a != 100 {
		let v = write_num(fib(a));
		a = a + 1;
	}
	return a;
}
