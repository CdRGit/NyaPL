fn [stdio] main(): i32 {
	fn nested(): i32 {
		return 5;
	}
	if foo() == 10 {
		return nested!();
	}
	if !(1 == 1) {
		return 15;
	}
	if 1 == 1 {
		200
	}
}

fn foo(): i32 {
	if { true } {
		apply(bar, 10, 50)
	} else {
		apply(bar, 10, 50)
	}
}

fn apply(f: i32, l: i32, r: i32): i32 {
	f?(l, r)
}

fn bar(v: i32, w: i32): i32 {
	let mut a = v;
	let mut c = 1;
	while a != 0 | false && true || false {
		c = c * a;
		a = a - 1;
	}
	c / w % w + w
}

fn prefixes(): i32 {
	let a = 0;
	if !false {
		return -+-**&&*&a;
	} else {
		return !0;
	}
}
