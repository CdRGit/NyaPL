fn [exit] main(): i32 {
	exit(40);
	let (a, _, _, _, _, _) = big_fat_tuple_function((add_two, add_two, add_two, add_two, add_two), 0);
	return a;
}

fn add_two(val: i32): i32 {
	return val + 2;
}

typedef func = fn (i32): i32;

fn big_fat_tuple_function(lot_of_functions: (func, func, func, func, func), in_val: i32): (i32, func, func, func, func, func) {
	let (a, b, c, d, e) = lot_of_functions;
	return (a(b(c(d(e(in_val))))), a, b, c, d, e);
}

fn [exit] exit(error_code: i32): () {
	unsafe [exit] {
		let fuckingHellIJustWantToExit = intrinsic:syscall(60, error_code, 0, 0, 0, 0, 0);
	}
	return ();
}

fn too_many_locals(): () {
	let (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z) = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25);
	let sum = a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z;
	let sub = a - b - c - d - e - f - g - h - i - j - k - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z;
	let div = a / b / c / d / e / f / g / h / i / j / k / l / m / n / o / p / q / r / s / t / u / v / w / x / y / z;
	let mul = a * b * c * d * e * f * g * h * i * j * k * l * m * n * o * p * q * r * s * t * u * v * w * x * y * z;
	let mod = a % b % c % d % e % f % g % h % i % j % k % l % m % n % o % p % q % r % s % t % u % v % w % x % y % z;
	return ();
}
